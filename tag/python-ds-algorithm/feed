<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>wklken's blog</title><link>http://www.wklken.me/</link><description></description><atom:link href="http://www.wklken.me/tag/python-ds-algorithm/feed" rel="self"></atom:link><lastBuildDate>Thu, 10 May 2012 00:00:00 +0800</lastBuildDate><item><title>数据结构&amp;算法实践-Python——序章</title><link>http://www.wklken.me/posts/2012/05/10/python-ds-01-start.html</link><description>&lt;p&gt;很久很久之前的blog，没写完的系列，当时想写完来着，有点用，先转过来&lt;/p&gt;
&lt;p&gt;数据结构&amp;amp;算法实践&amp;mdash;&amp;mdash;Python&amp;nbsp;&lt;/p&gt;
&lt;p&gt;--------------------------------------目录 START------------------------------------------------&lt;/p&gt;
&lt;p&gt;第一部分列表(目录主要来自于维基百科)&lt;/p&gt;
&lt;p&gt;模块一：经典排序实现&lt;/p&gt;
&lt;p&gt;交换排序法&lt;/p&gt;
&lt;p&gt;冒泡排序&amp;nbsp;|鸡尾酒排序&amp;nbsp;|奇偶排序&amp;nbsp;|梳排序&amp;nbsp;|地精排序(gnome_sort)&amp;nbsp;|Bogo排序|快速排序&lt;/p&gt;
&lt;p&gt;选择排序法&lt;/p&gt;
&lt;p&gt;选择排序 | 堆排序&lt;/p&gt;
&lt;p&gt;插入排序法&lt;/p&gt;
&lt;p&gt;插入排序 | 希尔排序 | 二叉查找树排序 | Library sort | Patience sorting&lt;/p&gt;
&lt;p&gt;归并排序法&lt;/p&gt;
&lt;p&gt;归并排序 | Strand sort&lt;/p&gt;
&lt;p&gt;非比较排序法&lt;/p&gt;
&lt;p&gt;基数排序 | 桶排序 | 计数排序 | 鸽巢排序 | Burstsort | Bead sort&lt;/p&gt;
&lt;p&gt;其他&lt;/p&gt;
&lt;p&gt;拓扑排序 | 排序网络 | Bitonic sorter | Batcher odd-even mergesort | Pancake sorting&lt;/p&gt;
&lt;p&gt;低效排序法&lt;/p&gt;
&lt;p&gt;Bogosort | Stooge sort&lt;/p&gt;
&lt;p&gt;模块二：经典查找&lt;/p&gt;
&lt;p&gt;模块三：数据结构(后续补充完整，树和图是大头，包含很多分类和经典算法)&lt;/p&gt;
&lt;p&gt;线性表 &amp;nbsp; 队列 &amp;nbsp; 栈 &amp;nbsp; 堆 &amp;nbsp; 树 &amp;nbsp;图&lt;/p&gt;
&lt;p&gt;--------------------------------------目录 END------------------------------------------------&lt;/p&gt;
&lt;p&gt;写在前面&lt;/p&gt;
&lt;p&gt;毕业迄今也接近一年了，发现很多学校的东西似乎生疏了.&lt;/p&gt;
&lt;p&gt;最近重新拿起数据结构，算法导论，离散数学，决定用代码敲些东西，权当复习&lt;/p&gt;
&lt;p&gt;大部分的地方我只会给出例子和具体的代码实现，顺带给出一些百科的链接，概念和理论性的东西网上都有，不赘述了&lt;br/&gt;
&lt;br/&gt;
之所以选择用python来写，主要是python的可读性非常好，即使不写注释，也能很轻松读懂.&lt;/p&gt;
&lt;p&gt;我把这个过程大概切成三个部分：&lt;/p&gt;
&lt;p&gt;1.经典数据结构和算法的实现&lt;/p&gt;
&lt;p&gt;实现基本的经典算法，包括经典排序，经典查找，索引等，基本实现及改进&lt;/p&gt;
&lt;p&gt;实现基本的数据结构，包括线性表，队列，栈，堆，树，图等，包含扩展&lt;/p&gt;
&lt;p&gt;使用实现类似Java的数据结构，至始至终都认为java的api最为优美，使用Python实现之，包括Map,List,Set等，提供相同的API，同时希望会循序渐进，先用简单直观的方法实现，给出优化，涉及的知识主要是python面向对象，继承，重写内置方法，封装，（要对Python和java数据结构实现的底层源码有了解，需要看源代码）&lt;/p&gt;
&lt;p&gt;2.笔试题面试题数据结构和算法实现&lt;/p&gt;
&lt;p&gt;笔试&amp;amp;面试题的python处理&lt;/p&gt;
&lt;p&gt;使用Python搞定笔试题&amp;amp;面试题中出现的算法和数据结构题目&lt;/p&gt;
&lt;p&gt;包含大规模数据处理的详细例子&lt;/p&gt;
&lt;p&gt;3.challenge&lt;/p&gt;
&lt;p&gt;挑战一些大个的东西，深入实现一些较为复杂的算法&lt;/p&gt;
&lt;p&gt;不罗嗦，先列下目录，已经写完一部分了，逐步发出来，更新目录(挪到前头去了)&lt;br/&gt;
&lt;br/&gt;
先列这些，逐渐补充.&lt;/p&gt;
&lt;p&gt;每天上完班回来，啃这堆砖头，然后敲出来，累却充实.&lt;/p&gt;
&lt;p&gt;敲代码，调试代码其实是一件十分快乐的事情&lt;/p&gt;
&lt;p&gt;My daytime job is SDET,平时敲自己喜欢的代码的时间并不会太多，业余时间有限&lt;/p&gt;
&lt;p&gt;但做事贵善始善终，会坚持搞完的哈!&lt;br/&gt;
&lt;br/&gt;
The End!&lt;/p&gt;
&lt;p&gt;wklken@yeah.net&lt;/p&gt;
&lt;p&gt;2012-05-10&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wklken</dc:creator><pubDate>Thu, 10 May 2012 00:00:00 +0800</pubDate><guid>tag:www.wklken.me,2012-05-10:posts/2012/05/10/python-ds-01-start.html</guid><category>python-ds-algorithm</category></item></channel></rss>