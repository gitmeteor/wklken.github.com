<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>wklken's blog - golang</title><link>http://www.wklken.me/</link><description></description><lastBuildDate>Sun, 09 Mar 2014 06:00:00 +0800</lastBuildDate><item><title>Golang笔记-06-struct</title><link>http://www.wklken.me/posts/2014/03/09/06-struct.html</link><description>&lt;h3 id="struct"&gt;struct&lt;/h3&gt;
&lt;p&gt;struct，一组字段的集合，类似其他语言的class&lt;/p&gt;
&lt;p&gt;放弃了大量包括继承在内的面向对象特性，只保留了组合(composition)这个最基础的特性&lt;/p&gt;
&lt;h4 id="1sheng-ming-ji-chu-shi-hua"&gt;1.声明及初始化&lt;/h4&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;type person struct {&lt;/span&gt;
&lt;span class="code-line"&gt;    name string&lt;/span&gt;
&lt;span class="code-line"&gt;    age  int&lt;/span&gt;
&lt;span class="code-line"&gt;}&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;//初始化&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;func main() {&lt;/span&gt;
&lt;span class="code-line"&gt;    var P person&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    P.name = "tom"&lt;/span&gt;
&lt;span class="code-line"&gt;    P.age = 25&lt;/span&gt;
&lt;span class="code-line"&gt;    fmt.Println(P.name)&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    P1 := person{"Tom1", 25}&lt;/span&gt;
&lt;span class="code-line"&gt;    fmt.Println(P1.name)&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    P2 := person{age: 24, name: "Tom"}&lt;/span&gt;
&lt;span class="code-line"&gt;    fmt.Println(P2 …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wklken</dc:creator><pubDate>Sun, 09 Mar 2014 06:00:00 +0800</pubDate><guid isPermaLink="false">tag:www.wklken.me,2014-03-09:/posts/2014/03/09/06-struct.html</guid><category>golang</category></item><item><title>Golang笔记-05-函数</title><link>http://www.wklken.me/posts/2014/03/02/05-func.html</link><description>&lt;h3 id="han-shu"&gt;函数&lt;/h3&gt;
&lt;p&gt;Go语言里面的核心设计，通过关键字func来声明&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;func funcName(input type1, input2 type2) (output1 type1, output2 type2) {&lt;/span&gt;
&lt;span class="code-line"&gt;    //logical code&lt;/span&gt;
&lt;span class="code-line"&gt;    return value1, value2&lt;/span&gt;
&lt;span class="code-line"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="ji-ben-yu-fa"&gt;基本语法&lt;/h3&gt;
&lt;p&gt;1.语法&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;//一般函数&lt;/span&gt;
&lt;span class="code-line"&gt;func func_name(a int) {&lt;/span&gt;
&lt;span class="code-line"&gt;    println(a)&lt;/span&gt;
&lt;span class="code-line"&gt;}&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;//多参数，无返回值&lt;/span&gt;
&lt;span class="code-line"&gt;func func_name(a, b int, c string) {&lt;/span&gt;
&lt;span class="code-line"&gt;    println(a, b, c)&lt;/span&gt;
&lt;span class="code-line"&gt;}&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;//单个返回值&lt;/span&gt;
&lt;span class="code-line"&gt;func func_name(a, b int) int { //同类型，可以省略 …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wklken</dc:creator><pubDate>Sun, 02 Mar 2014 05:00:00 +0800</pubDate><guid isPermaLink="false">tag:www.wklken.me,2014-03-02:/posts/2014/03/02/05-func.html</guid><category>golang</category></item><item><title>Golang笔记-04-array/slice/map</title><link>http://www.wklken.me/posts/2014/03/02/04-data-structure.html</link><description>&lt;h3 id="yi-array"&gt;一.Array&lt;/h3&gt;
&lt;p&gt;在Go语言中，数组是一个值类型(value type)&lt;/p&gt;
&lt;p&gt;所有的值类型变量在赋值和作为参数传递时都将产生一个复制动作&lt;/p&gt;
&lt;p&gt;如果作为函数的参数类型，则在函数调用时参数发生数据复制，在函数体中无法修改传入数组的内容&lt;/p&gt;
&lt;p&gt;数组相等用 = != 比较，不能用 &amp;lt; &amp;gt;&lt;/p&gt;
&lt;h4 id="1sheng-ming-fu-zhi"&gt;1.声明&amp;amp;赋值&lt;/h4&gt;
&lt;p&gt;初始化&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;语法&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;var VarName [n]type     // n&amp;gt;=0&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;e.g.&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;var a [5]int //[0 0 0 0 0]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;var c [2][3]int //二维&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="x"&gt;var b int = [5]int{1,2,3,4 …&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wklken</dc:creator><pubDate>Sun, 02 Mar 2014 04:00:00 +0800</pubDate><guid isPermaLink="false">tag:www.wklken.me,2014-03-02:/posts/2014/03/02/04-data-structure.html</guid><category>golang</category></item><item><title>Golang笔记-03-控制流</title><link>http://www.wklken.me/posts/2014/03/02/03-control-flow.html</link><description>&lt;p&gt;控制结构分为： 条件+选择+循环&lt;/p&gt;
&lt;h3 id="if"&gt;IF&lt;/h3&gt;
&lt;p&gt;1.说明&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;条件表达式没有括号&lt;/span&gt;
&lt;span class="code-line"&gt;支持一个初始化表达式（可以是多变量初始化语句）&lt;/span&gt;
&lt;span class="code-line"&gt;初始化语句中定义的都是只能在block级别中使用的局部变量，不能在block之外使用&lt;/span&gt;
&lt;span class="code-line"&gt;左大括号必须和条件语句在同一行(必须与if/else在同一行)&lt;/span&gt;
&lt;span class="code-line"&gt;go没有三元运算符&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;if判断语句条件不需要括号&lt;/span&gt;
&lt;span class="code-line"&gt;在判断语句里卖弄允许声明一个变量，其作用域只在逻辑块内，其他地方不起作用&lt;/span&gt;
&lt;span class="code-line"&gt;花括号一定存在，且必须与if/else在同一行&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2.语法&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;//基本&lt;/span&gt;
&lt;span class="code-line"&gt;if a &amp;gt; 0 {  //无括号&lt;/span&gt;
&lt;span class="code-line"&gt;     dosomething()&lt;/span&gt;
&lt;span class="code-line"&gt;} else if a == 0 { //必须用花括号&lt;/span&gt;
&lt;span class="code-line"&gt;     doothertings()&lt;/span&gt;
&lt;span class="code-line"&gt;} else {&lt;/span&gt;
&lt;span class="code-line"&gt;     donothing()&lt;/span&gt;
&lt;span class="code-line"&gt;}&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;//单行模式&lt;/span&gt;
&lt;span class="code-line"&gt;if a &amp;gt; 0 { a += 100 } else { a -= 100 }&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;3.示例 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wklken</dc:creator><pubDate>Sun, 02 Mar 2014 03:00:00 +0800</pubDate><guid isPermaLink="false">tag:www.wklken.me,2014-03-02:/posts/2014/03/02/03-control-flow.html</guid><category>golang</category></item><item><title>Golang笔记-02-类型、变量、常量</title><link>http://www.wklken.me/posts/2014/03/02/02-type-var-const.html</link><description>&lt;h3 id="ji-ben-lei-xing"&gt;基本类型&lt;/h3&gt;
&lt;p&gt;1.基本类型列表&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;类型        长度     说明&lt;/span&gt;
&lt;span class="code-line"&gt;bool         1      true/false,默认false, 不能把非0值当做true(不用数字代表true/false)&lt;/span&gt;
&lt;span class="code-line"&gt;byte         1      uint8 别名&lt;/span&gt;
&lt;span class="code-line"&gt;rune         4      int32别名。 代表一个unicode code point&lt;/span&gt;
&lt;span class="code-line"&gt;int/unit            一来所运行的平台，32bit/64bit&lt;/span&gt;
&lt;span class="code-line"&gt;int8/uint8   1     -128 ~ 127; 0 ~ 255&lt;/span&gt;
&lt;span class="code-line"&gt;int16/uint16 2     -32768 ~ 32767; 0 ~ 65535&lt;/span&gt;
&lt;span class="code-line"&gt;int32/uint32 4     -21亿 ~ 21亿， 0 ~ 42亿 …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wklken</dc:creator><pubDate>Sun, 02 Mar 2014 02:00:00 +0800</pubDate><guid isPermaLink="false">tag:www.wklken.me,2014-03-02:/posts/2014/03/02/02-type-var-const.html</guid><category>golang</category></item><item><title>Golang笔记-01-简介</title><link>http://www.wklken.me/posts/2014/03/02/01-intro.html</link><description>&lt;h3 id="goyu-yan-zui-zhu-yao-de-te-xing"&gt;Go语言最主要的特性&lt;/h3&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;自动垃圾回收&lt;/span&gt;
&lt;span class="code-line"&gt;更丰富的内置类型&lt;/span&gt;
&lt;span class="code-line"&gt;函数多返回值&lt;/span&gt;
&lt;span class="code-line"&gt;错误处理&lt;/span&gt;
&lt;span class="code-line"&gt;匿名函数和闭包&lt;/span&gt;
&lt;span class="code-line"&gt;类型和接口&lt;/span&gt;
&lt;span class="code-line"&gt;并发编程&lt;/span&gt;
&lt;span class="code-line"&gt;反射&lt;/span&gt;
&lt;span class="code-line"&gt;语言交互性&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;高性能/高效开发&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="an-zhuang"&gt;安装&lt;/h3&gt;
&lt;p&gt;安装说明 &lt;a href="http://golang.org/doc/install"&gt;地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;包下载 &lt;a href="https://code.google.com/p/go/downloads/list"&gt;地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;确认是否安装成功&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;go version //查看版本&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="huan-jing-bian-liang-she-zhi"&gt;环境变量设置&lt;/h3&gt;
&lt;h3 id="zheng-ti-mu-lu-jie-gou"&gt;整体目录结构&lt;/h3&gt;
&lt;p&gt;通过package组织，只有package名称为main的可以包含main函数&lt;/p&gt;
&lt;p&gt;一个程序有且仅有一个main包&lt;/p&gt;
&lt;p&gt;通过import 关键字导入其他非main包&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;bin/&lt;/span&gt;
&lt;span class="code-line"&gt;    |- mathapp&lt;/span&gt;
&lt;span class="code-line"&gt;pkg/&lt;/span&gt;
&lt;span class="code-line"&gt;    |- 平台名&lt;/span&gt;
&lt;span class="code-line"&gt;        |- xxx.a&lt;/span&gt;
&lt;span class="code-line"&gt;src/&lt;/span&gt;
&lt;span class="code-line"&gt;    |- mathapp&lt;/span&gt;
&lt;span class="code-line"&gt;        |- main.go&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="helloworld"&gt;Helloworld&lt;/h3&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;package&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="err"&gt;声明文件的&lt;/span&gt;&lt;span class="n"&gt;package&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="s2"&gt;"fmt"&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="err"&gt;包，不能包含没有用到的包，否则而编译错误&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;func …&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wklken</dc:creator><pubDate>Sun, 02 Mar 2014 01:00:00 +0800</pubDate><guid isPermaLink="false">tag:www.wklken.me,2014-03-02:/posts/2014/03/02/01-intro.html</guid><category>golang</category></item><item><title>Golang笔记-00-说明及资源</title><link>http://www.wklken.me/posts/2014/02/23/golang-base-intro.html</link><description>&lt;p&gt;&lt;img alt="golang" src="/imgs/golang/golang.png"/&gt;&lt;/p&gt;
&lt;p&gt;这份笔记是在学习golang过程中，汇集几本书以及网络视频、博客等资料汇总而成的，记录，方便查询&lt;/p&gt;
&lt;p&gt;已经基本完成，逐步发上来&lt;/p&gt;
&lt;h4 id="she-ji-nei-rong"&gt;涉及内容&lt;/h4&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;说明-资源 done&lt;/span&gt;
&lt;span class="code-line"&gt;基础知识 done&lt;/span&gt;
&lt;span class="code-line"&gt;类型 - 常量 - 变量 - 运算符 done&lt;/span&gt;
&lt;span class="code-line"&gt;控制流 done&lt;/span&gt;
&lt;span class="code-line"&gt;数据结构：数组，切片，map done&lt;/span&gt;
&lt;span class="code-line"&gt;函数 done&lt;/span&gt;
&lt;span class="code-line"&gt;结构struct&lt;/span&gt;
&lt;span class="code-line"&gt;接口&lt;/span&gt;
&lt;span class="code-line"&gt;字符串&lt;/span&gt;
&lt;span class="code-line"&gt;文件&lt;/span&gt;
&lt;span class="code-line"&gt;异常处理&lt;/span&gt;
&lt;span class="code-line"&gt;数学计算&lt;/span&gt;
&lt;span class="code-line"&gt;并发&lt;/span&gt;
&lt;span class="code-line"&gt;反射&lt;/span&gt;
&lt;span class="code-line"&gt;正则&lt;/span&gt;
&lt;span class="code-line"&gt;数据库&lt;/span&gt;
&lt;span class="code-line"&gt;时间日期&lt;/span&gt;
&lt;span class="code-line"&gt;配置文件&lt;/span&gt;
&lt;span class="code-line"&gt;日志logging&lt;/span&gt;
&lt;span class="code-line"&gt;json/xml文件处理&lt;/span&gt;
&lt;span class="code-line"&gt;测试&lt;/span&gt;
&lt;span class="code-line"&gt;项目及项目结构&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id="zi-yuan"&gt;资源&lt;/h4&gt;
&lt;p&gt;书籍：
    &lt;a href="https://github.com/astaxie/build-web-application-with-golang"&gt;Go web编程&lt;/a&gt;|
    &lt;a href="https://github.com/Unknwon/the-way-to-go_ZH_CN"&gt;Go 入门指南(The …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wklken</dc:creator><pubDate>Sun, 23 Feb 2014 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:www.wklken.me,2014-02-23:/posts/2014/02/23/golang-base-intro.html</guid><category>golang</category></item><item><title>搜索下拉提示框实现(python/golang)</title><link>http://www.wklken.me/posts/2013/10/13/search-suggestion.html</link><description>&lt;p&gt;在百度，google，taobao.com的搜索框，输入某个关键字时，会存在下拉提示，提示关键字列表&lt;/p&gt;
&lt;p&gt;国庆的时候，想了下如何实现这个功能&lt;/p&gt;
&lt;p&gt;用python和golang搞了个基本版本，国庆后直接上到线上了&lt;/p&gt;
&lt;p&gt;项目地址:&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;https://github.com/wklken/suggestion&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Demo地址：(30w关键字，每天约三百万次请求)&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;http://s.kuaiwan.com/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;基本机制：离线给出关键字和权重，用trie数据结构，逐一加入，建立一棵树，请求进来时，遍历树，获取节点，排序返回&lt;/p&gt;
&lt;p&gt;2013-10-13&lt;/p&gt;
&lt;p&gt;wklken&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wklken</dc:creator><pubDate>Sun, 13 Oct 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:www.wklken.me,2013-10-13:/posts/2013/10/13/search-suggestion.html</guid><category>python</category><category>golang</category></item></channel></rss>