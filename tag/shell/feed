<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>wklken's blog - shell</title><link>http://www.wklken.me/</link><description></description><lastBuildDate>Thu, 04 Jul 2013 00:00:00 +0800</lastBuildDate><item><title>Linux Shell脚本攻略笔记[速查]</title><link>http://www.wklken.me/posts/2013/07/04/note-of-linux-shell-scripting-cookbook.html</link><description>&lt;p&gt;Linux Shell脚本攻略的笔记，markdown编写，可以速查(ctrl+f)&lt;/p&gt;
&lt;p&gt;2013-09-08 从历史网摘中补充
 2014-02-16 增加&amp;lt;&lt;shell脚本指南&gt;&amp;gt;笔记补充&lt;/shell脚本指南&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;h3 id="zi-yuan"&gt;资源&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://coolshell.cn/articles/9104.html"&gt;sed简明教程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://coolshell.cn/articles/9070.html"&gt;awk简明教程&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;h3 id="shell-script"&gt;shell script&lt;/h3&gt;
&lt;table class="monokaitable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="c1"&gt;# do something&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h3 id="run-shell-script"&gt;run shell script&lt;/h3&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sh script.sh

or

chmod a+x script.sh
./script.sh
# 会读取首行的解释器, 执行
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;cmd&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cmd1; cmd2

or

cmd1
cmd2
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="echo"&gt;echo&lt;/h3&gt;
&lt;p&gt;echo  的功能正如其名，就是基于标准输出打印一段文本&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;echo "welcome …&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wklken</dc:creator><pubDate>Thu, 04 Jul 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:www.wklken.me,2013-07-04:/posts/2013/07/04/note-of-linux-shell-scripting-cookbook.html</guid><category>linux</category><category>shell</category></item><item><title>如何进行shell脚本正确性测试</title><link>http://www.wklken.me/posts/2012/09/15/how-to-test-shell.html</link><description>&lt;p&gt;在实际工作中，需要对shell脚本进行正确性测试。&lt;/p&gt;
&lt;p&gt;如何用最快最有效的方式进行测试？&lt;/p&gt;
&lt;p&gt;很多开发的习惯是，二话不说，写完/拿到，就跑一把，看看输入，输出，想要的操作是否完成，也就过了。&lt;/p&gt;
&lt;p&gt;其实这是十分不严谨的，若是未经过QA，风险还是相当大的。&lt;/p&gt;
&lt;p&gt;以下即shell脚本测试流程，仅供参考&lt;/p&gt;
&lt;p&gt;1.代码走读：&lt;/p&gt;
&lt;p&gt;写完，或者拿到一个shell脚本，不必急于运行，虽然实践是检验整理的唯一标准，但是，在读代码这个过程中，可以规避很多低级的bug.&lt;/p&gt;
&lt;p&gt;读什么？&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;A.代码逻辑，这个脚本用来做什么，主要分为多少步，分别做了什么事情？
  用于检查是否有遗漏逻辑，或有悖于需求。
B.具体语法，变量，判断语句
  语法方面的东西，变量是否定义，判断语句逻辑是否正确，是否考虑各种异常，错误是否退出，返回正确状态值等。
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2.语法检测：&lt;/p&gt;
&lt;p&gt;shell的语法还是相当让人无语的，很多很容易疏忽遗漏的地方&lt;/p&gt;
&lt;p&gt;命令格式：&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sh …&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">wklken</dc:creator><pubDate>Sat, 15 Sep 2012 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:www.wklken.me,2012-09-15:/posts/2012/09/15/how-to-test-shell.html</guid><category>python</category><category>shell</category></item></channel></rss>