<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>wklken's blog</title><link href="http://www.wklken.me/" rel="alternate"></link><link href="http://www.wklken.me/feeds/xiao-ji.atom.xml" rel="self"></link><id>http://www.wklken.me/</id><updated>2013-10-15T00:00:00+08:00</updated><entry><title>博客程序TODO列表</title><link href="http://www.wklken.me/posts/2013/10/15/blog-todo-list.html" rel="alternate"></link><published>2013-10-15T00:00:00+08:00</published><updated>2013-10-15T00:00:00+08:00</updated><author><name>wklken</name></author><id>tag:www.wklken.me,2013-10-15:posts/2013/10/15/blog-todo-list.html</id><summary type="html">&lt;p&gt;blog使用的是pelican，主题是拿开源的进行自己修改的，具体见底部&lt;/p&gt;
&lt;p&gt;之前做的时候，列了一份修改的计划，种种原因，只完成了部分&lt;/p&gt;
&lt;p&gt;记下来，后续抽空修改吧&lt;/p&gt;
&lt;p&gt;需要学习html/css/js基础知识&lt;/p&gt;
&lt;p&gt;==================================&lt;/p&gt;
&lt;p&gt;update: 2014-05-11&lt;/p&gt;
&lt;p&gt;新增主题,取名luna, 类似iawrite专注模式&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;1. 文章系列
2. markdown nav 侧边栏
3. 更漂亮的翻页
4. 分类页
5. archive页   区分年份, 加timeline
6. aboutme页面,使用imporess.js
7. tags标签展示
8. 分享到?
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;现在更倾向于,极简, 阅读和用户体验更好,需要背景色和字体选择更好&lt;/p&gt;
&lt;p&gt;==================================&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;TODO List&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;1.分类页，优化展示
2.专题页，优化展示
3.首页，文章列表的展示，方式上的修改
4.风格，更喜欢蓝色水晶
5.markdown超长不换行的处理
6.代码高亮: python/shell及其他 [DONE 20131021]
7.markdown标签浮动图层导航
8.csdn剩余博文迁移和优化
9.原有个人blog文章整理，修改
10.SEO入口，变成唯一入口，优化之，其他的下掉
11.整体风格统一，优化阅读体验 [DONE 20140601]
12.加入微博
13.书单的处理，要有图片
14.个人页的处理，个人简历，图
15.上一篇，下一篇 [DONE]
16.友链
17.近期文章
18,查看更多
19.资源页面 某些系列的入口
20.时间线
21.分享 [DONE 2014-11-09]
22.搜索入口 [DONE 2014-11-09]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;主要困难还是审美不行啊，修改前端对我来说是蛮大的挑战&lt;/p&gt;
&lt;p&gt;尝试处理下&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;update 20140617&lt;/p&gt;
&lt;p&gt;修改使用新主题, 编程focus模式, 极简主义&lt;/p&gt;
&lt;p&gt;the end&lt;/p&gt;
&lt;p&gt;wklken&lt;/p&gt;
&lt;p&gt;2013-10-15&lt;/p&gt;</summary><category term="blog"></category><category term="todo"></category></entry><entry><title>搜索下拉提示框实现(python/golang)</title><link href="http://www.wklken.me/posts/2013/10/13/search-suggestion.html" rel="alternate"></link><published>2013-10-13T00:00:00+08:00</published><updated>2013-10-13T00:00:00+08:00</updated><author><name>wklken</name></author><id>tag:www.wklken.me,2013-10-13:posts/2013/10/13/search-suggestion.html</id><summary type="html">&lt;p&gt;在百度，google，taobao.com的搜索框，输入某个关键字时，会存在下拉提示，提示关键字列表&lt;/p&gt;
&lt;p&gt;国庆的时候，想了下如何实现这个功能&lt;/p&gt;
&lt;p&gt;用python和golang搞了个基本版本，国庆后直接上到线上了&lt;/p&gt;
&lt;p&gt;项目地址:&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;https://github.com/wklken/suggestion
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Demo地址：(30w关键字，每天约三百万次请求)&lt;/p&gt;
&lt;div class="monokai"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;http://s.kuaiwan.com/
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;基本机制：离线给出关键字和权重，用trie数据结构，逐一加入，建立一棵树，请求进来时，遍历树，获取节点，排序返回&lt;/p&gt;
&lt;p&gt;2013-10-13&lt;/p&gt;
&lt;p&gt;wklken&lt;/p&gt;</summary><category term="python"></category><category term="golang"></category></entry><entry><title>小记-搭建discourse</title><link href="http://www.wklken.me/posts/2013/09/14/discourse.html" rel="alternate"></link><published>2013-09-14T00:00:00+08:00</published><updated>2013-09-14T00:00:00+08:00</updated><author><name>wklken</name></author><id>tag:www.wklken.me,2013-09-14:posts/2013/09/14/discourse.html</id><summary type="html">&lt;p&gt;早上，花了点时间，在刚买的digital ocean vps上尝试搭建了下&lt;a href="http://www.discourse.org/"&gt;discourse&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;网上的教程N多，最终决定使用官方的搭建 &lt;a href="https://github.com/discourse/discourse/blob/master/docs/INSTALL-ubuntu.md"&gt;教程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;对我这个ruby盲来说，第一次接触ruby环境，第一个感觉，这安装流程也太TM多了吧，要配的东西老多了，但另一方面，&lt;br/&gt;
也发现，python的环境配置相关的东西，体验上和ruby比起来还是有差距的,&lt;/p&gt;
&lt;p&gt;一个半小时，轻轻松松，也有点莫名其妙，搭建完了&lt;/p&gt;
&lt;p&gt;后端ruby resultful API，我在思考，貌似用Python也可以实现，就是不知道迁移这玩意儿耗时几何，&lt;/p&gt;
&lt;p&gt;研究研究，可以的话用python+flask实现一把&lt;/p&gt;
&lt;p&gt;好了，哥的博客有了discourse，地址 &lt;a href="http://bbs.wklken.me/"&gt;http://bbs.wklken.me&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;后续捣鼓下，研究下ruby&lt;/p&gt;
&lt;p&gt;2013-09-14&lt;/p&gt;
&lt;p&gt;wklken&lt;/p&gt;</summary><category term="discourse"></category></entry></feed>